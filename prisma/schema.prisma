// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CategoriaIngresso {
  id       String     @id @default(uuid())
  nome     String
  Ingresso Ingresso[]

  @@map("categoria_ingressos")
}

model LotesIngresso {
  id        String     @id @default(uuid())
  nome_lote String
  qtdMax    Int
  qtdMin    Int
  Ingresso  Ingresso[]

  @@map("lotes_ingressos")
}

model Ingresso {
  id                  String            @id @default(uuid())
  qtd                 Int
  lote                LotesIngresso     @relation(fields: [lotesIngressoID], references: [id])
  lotesIngressoID     String
  categoria           CategoriaIngresso @relation(fields: [categoriaIngressoID], references: [id])
  categoriaIngressoID String
  evento              Evento            @relation(fields: [eventoId], references: [id])
  eventoId            String
  clients             Cliente           @relation(fields: [clientId], references: [id])
  clientId            String
  valor               Float
  desconto            Float?
  Venda               Venda[]

  @@map("ingressos")
}

model Evento {
  id        String     @id @default(uuid())
  nome      String
  data      DateTime
  local     String
  descricao String?
  Ingresso  Ingresso[]

  @@map("eventos")
}

model Cliente {
  id       String     @id @default(uuid())
  nome     String
  email    String
  cpf      String?
  numero   Int?
  Ingresso Ingresso[]

  @@map("clientes")
}

model Venda {
  id         String   @id @default(uuid())
  qtd        String
  ingresso   Ingresso @relation(fields: [ingressoID], references: [id])
  ingressoID String

  @@map("vendas")
}
